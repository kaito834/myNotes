<!DOCTYPE html>
<html lang="ja">
<head>
  <!--
    Ref. "HTML5で何が変わるのか", 第1章 HTML5でできること/できないこと, 特集5 安全・堅牢なWebサイトの作り方, フロントエンド開発徹底攻略,
      http://www.amazon.co.jp/dp/4774166146
  -->
  <meta charset="utf-8">
  <title>Detect IP Address on LAN by script elements</title>
  <script>
    document.addEventListener("DOMContentLoaded", function(){
      var protocol = "http://";
      var port = 80;
      var c_subnet = "192.168.0.0";

      // 以下は192.168.0を返す
      var c = c_subnet.split(c_subnet.split('.')[3])[0];

      function check_host(url, id){
        var script = document.createElement('script');
        script.src = url;
        /*
          According to 9.4 クロスオリジンでの認証の検出, ブラウザハック,
          "読み込もうとしたリソースがステータスコード403、404、500を返した場合は<script>タグが
          onerrorイベントを起動し、ステータスコード200または302を返した場合はonloadイベントを起動するとします"

          And, confirmed error event fires when HTTP status code is 401.
        */
        script.onload = function(){
          console.log('Internal webapp found: ' + this.src);
        }
        script.onerror = function(){
          console.log('NOT FOUND: ' + this.src);
        }
        document.getElementsByTagName("head")[0].appendChild(script);
      }

      // クラスCサブネット全体を反復
      for(var i=1; i < 255; i++){
        var host = c + i;
        check_host(protocol + host + ":" + port, i);
      }
    });
  </script>
</head>
<body>
  <p>
    This is based on codes below in <a href="http://www.amazon.co.jp/dp/479814343X">ブラウザハック</a>:
    <ul>
      <li>イントラネット上のデバイスのIPアドレスの検出, 9.2 クロスオリジンでのWebアプリケーションの検出
      <li>9.4 クロスオリジンでの認証の検出
    </ul>
    Open this web page in web browser, then please run developer console.
  </p>
  <p>
    Tested on Google Chrome version 50.0.2661.94 m and Mozilla Firefox 46.0.
  </p>
</body>
</html>
